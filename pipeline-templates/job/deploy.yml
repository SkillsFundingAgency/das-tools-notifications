parameters:
  Environment:
  KubectlVersion:
  ServiceConnection:
  AksResourceGroup:
  KubernetesCluster:
jobs:
- deployment: DeployTo_${{ parameters.Environment }}
  environment: ${{ parameters.Environment }}
  pool:
    name: DAS - Continuous Deployment
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
          path: das-tools-notifications/
        - task: replacetokens@3
          displayName: Tokenise manifests
          inputs:
            rootDirectory: $(Pipeline.Workspace)/das-tools-notifications/manifests
            targetFiles: '**/*.yml'
            encoding: 'auto'
            writeBOM: true
            actionOnMissing: fail
            keepToken: false
            tokenPrefix: '{{'
            tokenSuffix: '}}'
            verbosity: detailed
        - task: KubectlInstaller@0
          displayName: Install Kubectl ${{ parameters.KubectlVersion }}
          inputs:
            kubectlVersion: ${{ parameters.KubectlVersion }}
        - task: Kubernetes@1
          displayName: Deploy API Ingress
          inputs:
            azureSubscriptionEndpoint: ${{ parameters.ServiceConnection }}
            azureResourceGroup: ${{ parameters.AksResourceGroup }}
            connectionType: Azure Resource Manager
            kubernetesCluster: ${{ parameters.KubernetesCluster }}
            namespace: engineering
            command: apply
            useConfigurationFile: true
            configuration: $(Pipeline.Workspace)/das-tools-notifications/manifests/ingress.yml
            useClusterAdmin: true
        - task: Kubernetes@1
          displayName: Create Api Deployment
          inputs:
            connectionType: Azure Resource Manager
            azureSubscriptionEndpoint: ${{ parameters.ServiceConnection }}
            azureResourceGroup: ${{ parameters.AksResourceGroup }}
            kubernetesCluster: ${{ parameters.KubernetesCluster }}
            namespace: engineering
            command: apply
            useConfigurationFile: true
            configuration: $(Pipeline.Workspace)/das-tools-notifications/manifests/deployment.yml
            useClusterAdmin: true