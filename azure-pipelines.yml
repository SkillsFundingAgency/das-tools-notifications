resources:
  repositories:
  - repository: self

trigger:
  batch: true
  branches:
    include:
      - "*"
  paths:
    include:
      - manifests/*
      - pipeline-templates/*
      - src/*
      - azure-pipelines.yml
      - Dockerfile

pr: none

stages:
#- template: pipeline-templates/stage/api-build.yml
- stage: ApiBuild
  displayName: Build Image
  jobs:
  - job: build_image
    displayName: Build Image
    pool:
      name: DAS - Continuous Integration
      demands:
        - docker
    steps:
      - task: UseGitVersion@5
        inputs:
          versionSpec: 5.x
          useConfigFile: true
          configFilePath: GitVersion.yml

      - task: Docker@2
        displayName: Login to Docker Hub
        inputs:
          command: login
          containerRegistry: Apprenticeships DevOps Docker Hub

      - task: Docker@2
        displayName: Build Image
        inputs:
          command: build
          dockerfile: Dockerfile
          repository: apprenticeshipsdevops/das-tools-notifications
          tags: $(Build.BuildNumber)

      - task: Docker@2
        displayName: Push Image
        inputs:
          command: push
          repository: apprenticeshipsdevops/das-tools-notifications
          tags: $(Build.BuildNumber)

#- template: pipeline-templates/stage/package-build.yml
- stage: PackageBuild
  displayName: Build Package
  jobs:
  - job: build_package
    displayName: Build Package
    pool:
      name: DAS - Continuous Integration
    steps:
    - task: UseGitVersion@5
      inputs:
        versionSpec: 5.x
        useConfigFile: true
        configFilePath: GitVersion.yml

    - task: DotNetCoreCLI@2
      displayName: dotnet restore
      inputs:
        command: restore
        projects: src/SFA.DAS.ToolsNotifications.Client/SFA.DAS.ToolsNotifications.Client.csproj

    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        projects: src/SFA.DAS.ToolsNotifications.Client/SFA.DAS.ToolsNotifications.Client.csproj
        arguments: /p:Configuration=Release

    - task: DotNetCoreCLI@2
      displayName: dotnet pack
      inputs:
        command: pack
        packagesToPack: src/SFA.DAS.ToolsNotifications.Client/SFA.DAS.ToolsNotifications.Client.csproj
        packDirectory: $(Build.ArtifactStagingDirectory)/package
        versioningScheme: byBuildNumber

    - task: PublishPipelineArtifact@1
      displayName: Publish Artifact - packages
      inputs:
        pathtoPublish: $(Build.ArtifactStagingDirectory)/package
        artifactName: NugetPackages

- stage: DeployTo_DEV
  condition: failed() ### remove
  displayName: DeployTo_DEV
  variables:
  - group: Dev Management Resources
  - group: TEST Shared Resources
  - group: Tools - ENV - TEST
  - name: KubectlVersion
    value: 1.18.8
  ##TO DO: update IngressHost value in 'Tools - ENV - TEST' and remove from pipeline file
  - name: IngressHost
    value: test-tools.apprenticeships.education.gov.uk
  jobs:
  - template: pipeline-templates/job/deploy.yml
    parameters:
      Environment: DEV
      KubectlVersion: $(KubectlVersion)
      ServiceConnection: SFA-DAS-DevTest-ARM
      AksResourceGroup: $(AKSResourceGroupName)
      KubernetesCluster: $(AKSSharedClusterName)

## deploy to PROD stage

## publish nuget package
- template: pipeline-templates/stage/package-publish.yml
